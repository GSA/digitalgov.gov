version: 2.1

orbs:
  node: circleci/node@5.3.0 

jobs:
  build:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run:
          name: Install libvips and additional libraries
          command: sudo apt-get update && sudo apt-get install -y libvips-dev libpng-dev libjpeg-dev
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install --include=optional
      - run:
          name: Rebuild sharp
          command: npm rebuild sharp
      - run:
          name: Install Gulp
          command: sudo npm install gulp-cli -g
      - run:
          name: Process Image/file if needed
          command: |
            if [ -n "$(ls -A content/uploads/_inbox/ 2>/dev/null)" ] || [ -n "$(ls -A data/images/ 2>/dev/null)" ] || [ -n "$(ls -A data/files/ 2>/dev/null)" ]; then
              gulp upload
            else
              echo "No files to process, skipping..."
            fi
      - add_ssh_keys:
          fingerprints:
            - "3c:63:4f:05:a1:ce:cb:de:aa:cc:4b:46:b3:18:c0:66"
      - run:
          name: Commit to GitHub if needed
          command: |
            if [ -n "$(ls -A content/uploads/_inbox/ 2>/dev/null)" ] || [ -n "$(ls -A data/images/ 2>/dev/null)" ] || [ -n "$(ls -A data/files/ 2>/dev/null)" ]; then
              git config user.email "digitalgov@gsa.gov"
              git config user.name "CircleCI"
              git add content/uploads/_inbox data/images data/files
              git commit -m "Images/Files processed [skip ci]" && git push --set-upstream origin $CIRCLE_BRANCH || echo "No changes to commit..."
            else
              echo "No files to commit, skipping..."
            fi
      - run:
          name: Audit packages
          command: npm audit
      - run:
          name: Build assets
          command: npm run federalist
      - run:
          name: Lint JSON
          command: npm run lint:json
      - run:
          name: Lint & fix Markdown
          command: npm run lint:markdown:fix && npm run lint:markdown
      - run:
          name: Lint Styles
          command: npm run lint:styles
      - run:
          name: Lint JavaScript
          command: npm run lint:js
      - run:
          name: Check Style formatting
          command: npm run prettier:styles
      - run:
          name: Check JavaScript formatting
          command: npm run prettier:js
      - run:
          name: Check Template formatting
          command: npm run prettier:templates
      - run:
          name: Install Hugo
          command: |
            if [ ! -f ".hugo-version" ]; then
              echo ".hugo-version file not found" >&2
              exit 1
            fi
            HUGO_VERSION=$(cat .hugo-version)
            wget https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz
            tar xzf hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz
            sudo mv hugo /usr/local/bin/
            rm hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz
            hugo version
      - run:
          name: Build with Hugo
          command: HUGO_ENV=production hugo --logLevel info -s . -d public
  
workflows:
  build_test_process:
    jobs:
      - build
